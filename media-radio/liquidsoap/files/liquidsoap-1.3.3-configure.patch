--- a/configure.ac	2017-07-26 12:18:27.000000000 +0300
+++ b/configure.ac	2017-07-26 13:54:51.000000000 +0300
@@ -328,7 +328,15 @@
 # Cry
 #
 
-AC_CHECK_OCAML_BINDING([cry],[0.4.0])
+ AC_ARG_ENABLE([cry],
+   AS_HELP_STRING([--disable-cry],[don't use cry]))
+if test "x$enable_cry" = "xno" ; then
+   W_CRY=""
+   w_CRY="no"
+else
+    AC_CHECK_OCAML_BINDING([cry],[0.4.0])
+fi
+
 
 # ocaml-mm
 #
@@ -339,54 +347,122 @@
 # xmlplaylist
 #
 
-AC_CHECK_OCAML_BINDING([xmlplaylist],[0.1.3])
+ AC_ARG_ENABLE([xmlplaylist],
+   AS_HELP_STRING([--disable-xmlplaylist],[don't use xmlplaylist]))
+if test "x$enable_xmlplaylist" = "xno" ; then
+   W_XMLPLAYLIST=""
+   w_XMLPLAYLIST="no"
+else
+    AC_CHECK_OCAML_BINDING([xmlplaylist],[0.1.3])
+fi
+
 
 #
 # Lastfm
 #
 
-AC_CHECK_OCAML_BINDING([lastfm],[0.3.0],[xmlplaylist])
+ AC_ARG_ENABLE([lastfm],
+   AS_HELP_STRING([--disable-lastfm],[don't use lastfm]))
+if test "x$enable_lastfm" = "xno" ; then
+   W_LASTFM=""
+   w_LASTFM="no"
+else
+    AC_CHECK_OCAML_BINDING([lastfm],[0.3.0],[xmlplaylist])
+fi
+
+
 
 #
 # Ogg
 #
 
-AC_CHECK_OCAML_BINDING([ogg],[0.5.0])
+ AC_ARG_ENABLE([ogg],
+   AS_HELP_STRING([--disable-ogg],[don't use ogg]))
+if test "x$enable_ogg" = "xno" ; then
+   W_OGG=""
+   w_OGG="no"
+else
+    AC_CHECK_OCAML_BINDING([ogg],[0.5.0])
+fi
 
 #
 # Vorbis
 #
 
-AC_CHECK_OCAML_BINDING([vorbis],[0.7.0],[ogg])
+ AC_ARG_ENABLE([vorbis],
+   AS_HELP_STRING([--disable-vorbis],[don't use vorbis]))
+if test "x$enable_vorbis" = "xno" ; then
+   W_VORBIS=""
+   w_VORBIS="no"
+else
+    AC_CHECK_OCAML_BINDING([vorbis],[0.7.0],[ogg])
+fi
 
 #
 # Opus
 #
 
-AC_CHECK_OCAML_BINDING([opus],[0.1.1],[ogg])
+ AC_ARG_ENABLE([opus],
+   AS_HELP_STRING([--disable-opus],[don't use opus]))
+if test "x$enable_opus" = "xno" ; then
+   W_OPUS=""
+   w_OPUS="no"
+else
+    AC_CHECK_OCAML_BINDING([opus],[0.1.1],[ogg])
+fi
 
 #
 # Speex
 #
 
-AC_CHECK_OCAML_BINDING([speex],[0.2.1],[ogg])
+ AC_ARG_ENABLE([speex],
+   AS_HELP_STRING([--disable-speex],[don't use speex]))
+if test "x$enable_speex" = "xno" ; then
+   W_SPEEX=""
+   w_SPEEX="no"
+else
+    AC_CHECK_OCAML_BINDING([speex],[0.2.1],[ogg])
+fi
 
 #
 # Mad
 #
 
-AC_CHECK_OCAML_BINDING([mad],[0.4.4])
+ AC_ARG_ENABLE([mad],
+   AS_HELP_STRING([--disable-mad],[don't use mad]))
+if test "x$enable_mad" = "xno" ; then
+   W_MAD=""
+   w_MAD="no"
+else
+    AC_CHECK_OCAML_BINDING([mad],[0.4.4])
+fi
 
 #
 # Flac
 #
 
-AC_CHECK_OCAML_BINDING([flac],[0.1.2])
+ AC_ARG_ENABLE([flac],
+   AS_HELP_STRING([--disable-flac],[don't use flac]))
+if test "x$enable_flac" = "xno" ; then
+   W_FLAC=""
+   w_FLAC="no"
+else
+    AC_CHECK_OCAML_BINDING([flac],[0.1.2])
+fi
+
 # Small hack..
 if test -z "${with_flac_ogg_dir}"; then
   with_flac_ogg_dir=${with_flac_dir}
 fi
-AC_CHECK_OCAML_BINDING([flac.ogg],[],[ogg flac],[],[],[],[flac])
+
+ AC_ARG_ENABLE([flac-ogg],
+   AS_HELP_STRING([--disable-flac-ogg],[don't use flac-ogg]))
+if test "x$enable_flac-ogg" = "xno" ; then
+   W_FLAC_OGG=""
+   w_FLAC_OGG="no"
+else
+    AC_CHECK_OCAML_BINDING([flac.ogg],[],[ogg flac],[],[],[],[flac])
+fi
 
 #
 # Dynlink
@@ -429,7 +505,15 @@
 # Lame
 #
 
-AC_CHECK_OCAML_BINDING([lame],[0.3.2])
+ AC_ARG_ENABLE([lame],
+   AS_HELP_STRING([--disable-lame],[don't use lame]))
+if test "x$enable_lame" = "xno" ; then
+   W_LAME=""
+   w_LAME="no"
+else
+    AC_CHECK_OCAML_BINDING([lame],[0.3.2])
+fi
+
 if test -z "${W_LAME}"; then
   if test -n "${W_DYNLINK}"; then
     if test -n "${OCAML_HAS_FIRST_CLASS_MODULES}"; then
@@ -444,25 +528,54 @@
 # Shine
 #
 
-AC_CHECK_OCAML_BINDING([shine],[0.2.0])
+ AC_ARG_ENABLE([shine],
+   AS_HELP_STRING([--disable-shine],[don't use shine]))
+if test "x$enable_shine" = "xno" ; then
+   W_SHINE=""
+   w_SHINE="no"
+else
+    AC_CHECK_OCAML_BINDING([shine],[0.2.0])
+fi
 
 #
 # Gstreamer
 #
 
-AC_CHECK_OCAML_BINDING([gstreamer],[0.2.0])
+ AC_ARG_ENABLE([gstreamer],
+   AS_HELP_STRING([--disable-gstreamer],[don't use gstreamer]))
+if test "x$enable_gstreamer" = "xno" ; then
+   W_GSTREAMER=""
+   w_GSTREAMER="no"
+else
+    AC_CHECK_OCAML_BINDING([gstreamer],[0.2.0])
+fi
 
 #
 # frei0r
 #
 
-AC_CHECK_OCAML_BINDING([frei0r],[0.1.0])
+ AC_ARG_ENABLE([frei0r],
+   AS_HELP_STRING([--disable-frei0r],[don't use frei0r]))
+if test "x$enable_frei0r" = "xno" ; then
+   W_FREI0R=""
+   w_FREI0R="no"
+else
+    AC_CHECK_OCAML_BINDING([frei0r],[0.1.0])
+fi
 
 #
 # Fdkaac
 #
 
-AC_CHECK_OCAML_BINDING([fdkaac],[0.2.1])
+ AC_ARG_ENABLE([fdkaac],
+   AS_HELP_STRING([--disable-fdkaac],[don't use fdkaac]))
+if test "x$enable_fdkaac" = "xno" ; then
+   W_FDKAAC=""
+   w_FDKAAC="no"
+else
+    AC_CHECK_OCAML_BINDING([fdkaac],[0.2.1])
+fi
+
 if test -z "${W_FDKAAC}"; then
   if test -n "${W_DYNLINK}"; then
     if test -n "${OCAML_HAS_FIRST_CLASS_MODULES}"; then
@@ -477,49 +590,105 @@
 # Theora
 #
 
-AC_CHECK_OCAML_BINDING([theora],[0.3.1],[ogg])
+ AC_ARG_ENABLE([theora],
+   AS_HELP_STRING([--disable-theora],[don't use theora]))
+if test "x$enable_theora" = "xno" ; then
+   W_THEORA=""
+   w_THEORA="no"
+else
+    AC_CHECK_OCAML_BINDING([theora],[0.3.1],[ogg])
+fi
 
 #
 # Gavl
 #
 
-AC_CHECK_OCAML_BINDING([gavl],[0.1.4])
+ AC_ARG_ENABLE([gavl],
+   AS_HELP_STRING([--disable-gavl],[don't use gavl]))
+if test "x$enable_gavl" = "xno" ; then
+   W_GAVL=""
+   w_GAVL="no"
+else
+    AC_CHECK_OCAML_BINDING([gavl],[0.1.4])
+fi
 
 #
 # FFMPEG
 #
 
-AC_CHECK_OCAML_BINDING([ffmpeg],[0.1.0])
+ AC_ARG_ENABLE([ffmpeg],
+   AS_HELP_STRING([--disable-ffmpeg],[don't use ffmpeg]))
+if test "x$enable_ffmpeg" = "xno" ; then
+   W_FFMPEG=""
+   w_FFMPEG="no"
+else
+    AC_CHECK_OCAML_BINDING([ffmpeg],[0.1.0])
+fi
 
 #
 # Jack
 #
 
-AC_CHECK_OCAML_BINDING([bjack],[0.1.3])
+ AC_ARG_ENABLE([bjack],
+   AS_HELP_STRING([--disable-bjack],[don't use bjack]))
+if test "x$enable_bjack" = "xno" ; then
+   W_BJACK=""
+   w_BJACK="no"
+else
+    AC_CHECK_OCAML_BINDING([bjack],[0.1.3])
+fi
 
 #
 # Alsa
 #
 
-AC_CHECK_OCAML_BINDING([alsa],[0.2.1])
+ AC_ARG_ENABLE([alsa],
+   AS_HELP_STRING([--disable-alsa],[don't use alsa]))
+if test "x$enable_alsa" = "xno" ; then
+   W_ALSA=""
+   w_ALSA="no"
+else
+    AC_CHECK_OCAML_BINDING([alsa],[0.2.1])
+fi
 
 #
 # LibAO
 #
 
-AC_CHECK_OCAML_BINDING([ao],[0.2.0])
+ AC_ARG_ENABLE([ao],
+   AS_HELP_STRING([--disable-ao],[don't use ao]))
+if test "x$enable_ao" = "xno" ; then
+   W_AO=""
+   w_AO="no"
+else
+    AC_CHECK_OCAML_BINDING([ao],[0.2.0])
+fi
 
 #
 # Samplerate
 #
 
-AC_CHECK_OCAML_BINDING([samplerate],[0.1.1])
+ AC_ARG_ENABLE([samplerate],
+   AS_HELP_STRING([--disable-samplerate],[don't use samplerate]))
+if test "x$enable_samplerate" = "xno" ; then
+   W_SAMPLERATE=""
+   w_SAMPLERATE="no"
+else
+    AC_CHECK_OCAML_BINDING([samplerate],[0.1.1])
+fi
 
 #
 # Taglib
 #
 
-AC_CHECK_OCAML_BINDING([taglib],[0.3.0])
+ AC_ARG_ENABLE([taglib],
+   AS_HELP_STRING([--disable-taglib],[don't use taglib]))
+if test "x$enable_taglib" = "xno" ; then
+   W_TAGLIB=""
+   w_TAGLIB="no"
+else
+    AC_CHECK_OCAML_BINDING([taglib],[0.3.0])
+fi
 
 #
 # OSS
@@ -551,7 +720,14 @@
 # SSL
 #
 
-AC_CHECK_OCAML_BINDING([ssl],[0.5.2])
+ AC_ARG_ENABLE([ssl],
+   AS_HELP_STRING([--disable-ssl],[don't use ssl]))
+if test "x$enable_ssl" = "xno" ; then
+   W_SSL=""
+   w_SSL="no"
+else
+    AC_CHECK_OCAML_BINDING([ssl],[0.5.2])
+fi
 
 if test "a$W_SSL" = "ayes"; then
     cat >> src/configure.ml <<EOCONF
@@ -565,13 +741,27 @@
 # SecureTransport (OSX)
 #
 
-AC_CHECK_OCAML_BINDING([osx-secure-transport],[],[])
+ AC_ARG_ENABLE([osx-secure-transport],
+   AS_HELP_STRING([--disable-osx-secure-transport],[don't use osx-secure-transport]))
+if test "x$enable_osx-secure-transport" = "xno" ; then
+   W_OSX_SECURE_TRANSPORT=""
+   w_OSX_SECURE_TRANSPORT="no"
+else
+    AC_CHECK_OCAML_BINDING([osx-secure-transport],[],[])
+fi
 
 #
 # Magic
 #
 
-AC_CHECK_OCAML_BINDING([magic])
+ AC_ARG_ENABLE([magic],
+   AS_HELP_STRING([--disable-magic],[don't use magic]))
+if test "x$enable_magic" = "xno" ; then
+   W_MAGIC=""
+   w_MAGIC="no"
+else
+    AC_CHECK_OCAML_BINDING([magic])
+fi
 
 if test -z "$W_MAGIC" ; then
     cat >> src/configure.ml <<EOCONF
@@ -606,8 +796,13 @@
 
 AC_ARG_ENABLE([camomile],
   AS_HELP_STRING([--disable-camomile],[don't use camomile (no charset detection and conversion)]))
+if test "x$enable_camomile" = "xno" ; then
+   W_CAMOMILE=""
+   w_CAMOMILE="no"
+else
+   AC_CHECK_OCAML_BINDING([camomile])
+fi
 
-AC_CHECK_OCAML_BINDING([camomile])
 
 if test -z "$W_CAMOMILE" ; then
   if test "x$enable_camomile" = "xno" ; then
@@ -732,7 +927,14 @@
 
 # Inotify
 
-AC_CHECK_OCAML_BINDING([inotify],[1.5])
+ AC_ARG_ENABLE([inotify],
+   AS_HELP_STRING([--disable-inotify],[don't use inotify]))
+if test "x$enable_inotify" = "xno" ; then
+   W_INOTIFY=""
+   w_INOTIFY="no"
+else
+    AC_CHECK_OCAML_BINDING([inotify],[1.5])
+fi
 
 cat >> src/configure.ml <<EOCONF
 let file_watcher = ref File_watcher_mtime.watch
@@ -740,7 +942,14 @@
 
 # Yojson
 
-AC_CHECK_OCAML_BINDING([yojson],[],[],[],[],[1])
+ AC_ARG_ENABLE([yojson],
+   AS_HELP_STRING([--disable-yojson],[don't use yojson]))
+if test "x$enable_yojson" = "xno" ; then
+   W_YOJSON=""
+   w_YOJSON="no"
+else
+    AC_CHECK_OCAML_BINDING([yojson],[],[],[],[],[1])
+fi
 
 if test -z "${W_YOJSON}"; then
 cat >> src/configure.ml <<__BLAH__
@@ -754,20 +963,106 @@
 
 # OCaml bindings
 
-AC_CHECK_OCAML_BINDING([faad],[0.3.0])
-AC_CHECK_OCAML_BINDING([soundtouch],[0.1.7])
-AC_CHECK_OCAML_BINDING([portaudio],[0.2.0])
-AC_CHECK_OCAML_BINDING([pulseaudio],[0.1.2])
-AC_CHECK_OCAML_BINDING([ladspa],[0.1.4])
-AC_CHECK_OCAML_BINDING([dssi],[0.1.0])
-AC_CHECK_OCAML_BINDING([sdl],[],[],[],[sdl.sdlmixer sdl.sdlttf sdl.sdlimage])
-AC_CHECK_OCAML_BINDING([camlimages],[4.0.0],[],[],[camlimages.all_formats])
-AC_CHECK_OCAML_BINDING([lo],[0.1.0])
-AC_CHECK_OCAML_BINDING([gd])
+ AC_ARG_ENABLE([faad],
+   AS_HELP_STRING([--disable-faad],[don't use faad]))
+if test "x$enable_faad" = "xno" ; then
+   W_FAAD=""
+   w_FAAD="no"
+else
+    AC_CHECK_OCAML_BINDING([faad],[0.3.0])
+fi
+
+ AC_ARG_ENABLE([soundtouch],
+   AS_HELP_STRING([--disable-soundtouch],[don't use soundtouch]))
+if test "x$enable_soundtouch" = "xno" ; then
+   W_SOUNDTOUCH=""
+   w_SOUNDTOUCH="no"
+else
+    AC_CHECK_OCAML_BINDING([soundtouch],[0.1.7])
+fi
+
+ AC_ARG_ENABLE([portaudio],
+   AS_HELP_STRING([--disable-portaudio],[don't use portaudio]))
+if test "x$enable_portaudio" = "xno" ; then
+   W_PORTAUDIO=""
+   w_PORTAUDIO="no"
+else
+    AC_CHECK_OCAML_BINDING([portaudio],[0.2.0])
+fi
+
+ AC_ARG_ENABLE([pulseaudio],
+   AS_HELP_STRING([--disable-pulseaudio],[don't use pulseaudio]))
+if test "x$enable_pulseaudio" = "xno" ; then
+   W_PULSEAUDIO=""
+   w_PULSEAUDIO="no"
+else
+    AC_CHECK_OCAML_BINDING([pulseaudio],[0.1.2])
+fi
+
+ AC_ARG_ENABLE([ladspa],
+   AS_HELP_STRING([--disable-ladspa],[don't use ladspa]))
+if test "x$enable_ladspa" = "xno" ; then
+   W_LADSPA=""
+   w_LADSPA="no"
+else
+    AC_CHECK_OCAML_BINDING([ladspa],[0.1.4])
+fi
+
+ AC_ARG_ENABLE([dssi],
+   AS_HELP_STRING([--disable-dssi],[don't use dssi]))
+if test "x$enable_dssi" = "xno" ; then
+   W_DSSI=""
+   w_DSSI="no"
+else
+    AC_CHECK_OCAML_BINDING([dssi],[0.1.0])
+fi
+
+ AC_ARG_ENABLE([sdl],
+   AS_HELP_STRING([--disable-sdl],[don't use sdl]))
+if test "x$enable_sdl" = "xno" ; then
+   W_SDL=""
+   w_SDL="no"
+else
+    AC_CHECK_OCAML_BINDING([sdl],[],[],[],[sdl.sdlmixer sdl.sdlttf sdl.sdlimage])
+fi
+
+ AC_ARG_ENABLE([camlimages],
+   AS_HELP_STRING([--disable-camlimages],[don't use camlimages]))
+if test "x$enable_camlimages" = "xno" ; then
+   W_CAMLIMAGES=""
+   w_CAMLIMAGES="no"
+else
+    AC_CHECK_OCAML_BINDING([camlimages],[4.0.0],[],[],[camlimages.all_formats])
+fi
+
+ AC_ARG_ENABLE([lo],
+   AS_HELP_STRING([--disable-lo],[don't use lo]))
+if test "x$enable_lo" = "xno" ; then
+   W_LO=""
+   w_LO="no"
+else
+    AC_CHECK_OCAML_BINDING([lo],[0.1.0])
+fi
+
+ AC_ARG_ENABLE([gd],
+   AS_HELP_STRING([--disable-gd],[don't use gd]))
+if test "x$enable_gd" = "xno" ; then
+   W_GD=""
+   w_GD="no"
+else
+    AC_CHECK_OCAML_BINDING([gd])
+fi
 
 # Winsvc (to run as a service)
 
-AC_CHECK_OCAML_BINDING([winsvc],[0.0.1])
+ AC_ARG_ENABLE([winsvc],
+   AS_HELP_STRING([--disable-winsvc],[don't use winsvc]))
+if test "x$enable_winsvc" = "xno" ; then
+   W_WINSVC=""
+   w_WINSVC="no"
+else
+    AC_CHECK_OCAML_BINDING([winsvc],[0.0.1])
+fi
 
 #
 # Tuning (See INSTALL to understand these features)
